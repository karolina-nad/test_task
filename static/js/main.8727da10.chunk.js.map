{"version":3,"sources":["components/SelectItem.tsx","components/AddNewItem.tsx","components/ListOfItems.tsx","App.tsx","index.tsx"],"names":["SelectItem","filterItems","selectId","editOnSubmit","title","description","editOnChangeTitle","editOnChangeDescription","similar","findSimilar","className","map","item","id","date","onSubmit","name","type","placeholder","value","onChange","length","AddNewItem","addNewOnSubmit","titleNew","descriptionNew","titleError","descriptionError","addNewOnChangeTitle","addNewOnChangeDescription","ListOfItems","selectOnClick","deleteOnClick","announcement","onClick","App","state","announcements","announcementsFromServer","edit","showList","query","search","filter","toLowerCase","includes","setState","currentState","delete","lengthOfArray","newAnnouncement","Date","toLocaleString","selected","find","selectedTitle","split","newAr","i","push","slice","event","preventDefault","target","this","disabled","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8727da10.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  filterItems: Announcement[];\n  selectId: number;\n  editOnSubmit: (event: React.FormEvent) => void;\n  title: string;\n  description: string;\n  editOnChangeTitle: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  editOnChangeDescription: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  findSimilar: () => Announcement[];\n};\n\nexport const SelectItem: React.FC<Props> = ({\n  filterItems,\n  selectId,\n  editOnSubmit,\n  title,\n  description,\n  editOnChangeTitle,\n  editOnChangeDescription,\n  findSimilar,\n}) => {\n  const similar = findSimilar();\n\n  return (\n    <>\n      <h3 className=\"app__title\">\n        Title:\n        {' '}\n        {filterItems.map(item => (item.id === selectId ? item.title : null))}\n      </h3>\n      <p className=\"app__item-p\">\n        Description:\n        {' '}\n        {filterItems.map(item => (\n          item.id === selectId ? item.description : null\n        ))}\n      </p>\n      <p className=\"app__item-p\">\n        Data:\n        {' '}\n        {filterItems.map(item => (\n          item.id === selectId ? item.date : null\n        ))}\n      </p>\n      <form\n        className=\"app__form\"\n        onSubmit={editOnSubmit}\n      >\n        <h3 className=\"app__title\">Edit announcement:</h3>\n        <input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Enter new title\"\n          className=\"form-control input-sm app__input\"\n          value={title}\n          onChange={editOnChangeTitle}\n        />\n        <textarea\n          name=\"description\"\n          placeholder=\"Enter new description\"\n          className=\"form-control input-sm app__input\"\n          value={description}\n          onChange={editOnChangeDescription}\n        />\n        <button type=\"submit\" className=\"btn btn-info app__button\">Save</button>\n      </form>\n      <p className=\"app__similar\">\n        Similar announcements by title:\n        {' '}\n        {similar.length === 0 && 'Not found'}\n      </p>\n      <ul className=\"list-group list-group-flush\">\n        {similar.map(item => (\n          <li\n            key={item.id}\n            className=\"list-group-item list-group-item-light app__list-item\"\n          >\n            Title:\n            {' '}\n            {item.title}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  addNewOnSubmit: (event: React.FormEvent) => void;\n  titleNew: string,\n  descriptionNew: string,\n  titleError: string,\n  descriptionError: string,\n  addNewOnChangeTitle: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  addNewOnChangeDescription: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n};\n\nexport const AddNewItem: React.FC<Props> = ({\n  addNewOnSubmit,\n  titleNew,\n  descriptionNew,\n  titleError,\n  descriptionError,\n  addNewOnChangeTitle,\n  addNewOnChangeDescription,\n}) => {\n  return (\n    <div className=\"app__add-new\">\n      <h3 className=\"app__title\">Add new announcement</h3>\n      <form\n        className=\"form-horizontal app__form\"\n        onSubmit={addNewOnSubmit}\n      >\n        <input\n          name=\"title\"\n          type=\"text\"\n          className=\"form-control input-sm app__input\"\n          placeholder=\"Enter title\"\n          value={titleNew}\n          onChange={addNewOnChangeTitle}\n        />\n        <div className=\"alert-danger app__error\">\n          {titleError && titleError}\n        </div>\n        <textarea\n          name=\"description\"\n          className=\"form-control input-sm app__input\"\n          placeholder=\"Enter description\"\n          value={descriptionNew}\n          onChange={addNewOnChangeDescription}\n        />\n        <div className=\"alert-danger app__error\">\n          {descriptionError && descriptionError}\n        </div>\n        <button type=\"submit\" className=\"btn btn-info app__button\">\n          Add announcement\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  filterItems: Announcement[];\n  selectOnClick: (announcement: Announcement) => void;\n  deleteOnClick: (announcement: Announcement) => void;\n};\n\nexport const ListOfItems: React.FC<Props> = ({\n  filterItems,\n  selectOnClick,\n  deleteOnClick,\n}) => {\n  return (\n    <>\n      <h3 className=\"app__title\">List of announcements</h3>\n      <ul className=\"list-group list-group-flush\">\n        {filterItems\n          .map(announcement => (\n            <>\n              <li\n                key={announcement.id}\n                className=\"list-group-item list-group-item-light app__list-item\"\n              >\n                <p className=\"app__item-title\">{announcement.title}</p>\n                <div className=\"app__item-buttons btn-group\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-info\"\n                    onClick={() => selectOnClick(announcement)}\n                  >\n                    Select\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-info\"\n                    onClick={() => deleteOnClick(announcement)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            </>\n          ))}\n      </ul>\n      {filterItems.length === 0 && 'Not found'}\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport announcementsFromServer from './api/announcements.json';\nimport { SelectItem } from './components/SelectItem';\nimport { AddNewItem } from './components/AddNewItem';\nimport { ListOfItems } from './components/ListOfItems';\n\ntype State = {\n  announcements: Announcement[];\n  showList: boolean;\n  edit: boolean;\n  selectId: number;\n  title: string;\n  description: string;\n  titleNew: string;\n  descriptionNew: string;\n  titleError: string;\n  descriptionError: string;\n  query: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    announcements: announcementsFromServer,\n    edit: false,\n    showList: false,\n    selectId: 0,\n    title: '',\n    description: '',\n    titleNew: '',\n    descriptionNew: '',\n    titleError: '',\n    descriptionError: '',\n    query: '',\n  };\n\n  search = () => {\n    return this.state.announcements.filter((item) => (\n      item.title.toLowerCase().includes(this.state.query.toLowerCase())\n    ));\n  };\n\n  edit = (id: number, title: string, description: string) => {\n    this.setState(currentState => {\n      return {\n        announcements: currentState.announcements.map(item => {\n          if (item.id !== id) {\n            return item;\n          }\n\n          return {\n            ...item,\n            title: title.length > 0 ? title : item.title,\n            description: description.length > 0 ? description : item.description,\n          };\n        }),\n      };\n    });\n  };\n\n  delete = (id: number) => {\n    this.setState((currentState) => {\n      return {\n        announcements: currentState.announcements.filter(item => item.id !== id),\n      };\n    });\n  };\n\n  onSubmit = () => {\n    if (!this.state.titleNew) {\n      this.setState({\n        titleError: 'Please enter the title',\n      });\n    }\n\n    if (!this.state.descriptionNew) {\n      this.setState({\n        descriptionError: 'Please enter the description',\n      });\n    }\n\n    if (this.state.titleNew && this.state.descriptionNew) {\n      this.setState((currentState) => {\n        const lengthOfArray = currentState.announcements.length;\n        const newId = currentState.announcements[lengthOfArray - 1].id + 1;\n        const newTitle = currentState.titleNew;\n        const newDescription = currentState.descriptionNew;\n        const newDate = new Date().toLocaleString();\n        const newAnnouncement = {\n          id: newId,\n          title: newTitle,\n          description: newDescription,\n          date: newDate,\n        };\n\n        return {\n          announcements: [...currentState.announcements, newAnnouncement],\n          titleNew: '',\n          descriptionNew: '',\n          titleError: '',\n          descriptionError: '',\n        };\n      });\n    }\n  };\n\n  findSimilar = () => {\n    const selected = this.state.announcements.find(item => item.id === this.state.selectId);\n    const selectedTitle = selected?.title.toLowerCase().split(' ') || [];\n    const newAr: Announcement[] = [];\n\n    this.state.announcements.map(item => {\n      if (item.id !== this.state.selectId) {\n        for (let i = 0; i < selectedTitle?.length; i += 1) {\n          if (item.title.toLowerCase().includes(selectedTitle[i])) {\n            newAr.push(item);\n          }\n        }\n      }\n\n      return item;\n    });\n\n    return newAr.slice(0, 3);\n  };\n\n  editOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.edit(this.state.selectId, this.state.title, this.state.description);\n    this.setState({\n      title: '',\n      description: '',\n    });\n  };\n\n  editOnChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({ title: value });\n  };\n\n  editOnChangeDescription = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = event.target;\n\n    this.setState({ description: value });\n  };\n\n  addNewOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.onSubmit();\n  };\n\n  addNewOnChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      titleNew: event.target.value,\n      titleError: '',\n    });\n  };\n\n  addNewOnChangeDescription = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      descriptionNew: event.target.value,\n      descriptionError: '',\n    });\n  };\n\n  selectOnClick = (announcement: Announcement) => {\n    this.setState({\n      edit: true,\n      selectId: announcement.id,\n    });\n  };\n\n  deleteOnClick = (announcement: Announcement) => {\n    this.delete(announcement.id);\n    this.setState({ selectId: 0 });\n  };\n\n  render() {\n    const filterItems = this.search();\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__first-block\">\n          <button\n            type=\"button\"\n            className=\"btn btn-info app__show-button\"\n            onClick={() => {\n              this.setState({ showList: true });\n            }}\n            disabled={this.state.showList}\n          >\n            Show announcements\n          </button>\n          {this.state.showList && (\n            <div>\n              <input\n                type=\"text\"\n                className=\"form-control input-sm app__search-input\"\n                placeholder=\"Search by title\"\n                value={this.state.query}\n                onChange={(event) => {\n                  this.setState({\n                    query: event.target.value,\n                  });\n                }}\n              />\n            </div>\n          )}\n          {this.state.showList && (\n            <ListOfItems\n              filterItems={filterItems}\n              selectOnClick={this.selectOnClick}\n              deleteOnClick={this.deleteOnClick}\n            />\n          )}\n        </div>\n        <div className=\"app__second-block\">\n          <AddNewItem\n            addNewOnSubmit={this.addNewOnSubmit}\n            titleNew={this.state.titleNew}\n            descriptionNew={this.state.descriptionNew}\n            titleError={this.state.titleError}\n            descriptionError={this.state.descriptionError}\n            addNewOnChangeTitle={this.addNewOnChangeTitle}\n            addNewOnChangeDescription={this.addNewOnChangeDescription}\n          />\n          {this.state.selectId !== 0 && (\n            <div className=\"app__select\">\n              {this.state.edit && (\n                <SelectItem\n                  filterItems={filterItems}\n                  selectId={this.state.selectId}\n                  editOnSubmit={this.editOnSubmit}\n                  title={this.state.title}\n                  description={this.state.description}\n                  editOnChangeTitle={this.editOnChangeTitle}\n                  editOnChangeDescription={this.editOnChangeDescription}\n                  findSimilar={this.findSimilar}\n                />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}